describe("Custom Matchers",function(){var e;beforeEach(function(){e=new jasmine.Env,e.updateInterval=0}),it("should be easy to add more matchers local to a spec, suite, etc.",function(){var t,n,i,r,s=e.describe("some suite",function(){e.beforeEach(function(){this.addMatchers({matcherForSuite:function(e){return this.message="matcherForSuite: actual: "+this.actual+"; expected: "+e,!0}})}),t=e.it("spec with an expectation").runs(function(){this.addMatchers({matcherForSpec:function(e){return this.message="matcherForSpec: actual: "+this.actual+"; expected: "+e,!0}}),i=this.expect("xxx")}),n=e.it("spec with failing expectation").runs(function(){r=this.expect("yyy")})});s.execute(),i.matcherForSuite("expected"),expect(i.message).toEqual("matcherForSuite: actual: xxx; expected: expected"),i.matcherForSpec("expected"),expect(i.message).toEqual("matcherForSpec: actual: xxx; expected: expected"),r.matcherForSuite("expected"),expect(r.message).toEqual("matcherForSuite: actual: yyy; expected: expected"),expect(r.matcherForSpec).toBe(jasmine.undefined)}),it("should generate messages with the same rules as for regular matchers when this.report() is not called",function(){var t,n=e.describe("some suite",function(){t=e.it("spec with an expectation").runs(function(){this.addMatchers({toBeTrue:function(){return this.actual===!0}}),this.expect(!0).toBeTrue(),this.expect(!1).toBeTrue()})});n.execute();var i=new jasmine.ExpectationResult({passed:!0,matcherName:"toBeTrue",actual:!0,expected:jasmine.undefined,message:"Passed."}),r=new jasmine.ExpectationResult({passed:!1,matcherName:"toBeTrue",actual:!1,expected:jasmine.undefined,message:"Expected false to be true."});r.trace=jasmine.any(Object),expect(t.results().getItems()).toEqual([i,r])}),it("should pass args",function(){var t,n=[],i=e.describe("some suite",function(){t=e.it("spec with an expectation").runs(function(){this.addMatchers({toBeTrue:function(){return n.push(jasmine.util.argsToArray(arguments)),this.actual===!0}}),this.expect(!0).toBeTrue(),this.expect(!1).toBeTrue("arg"),this.expect(!0).toBeTrue("arg1","arg2")})});i.execute();var r=t.results().getItems();expect(r[0].expected).toEqual(jasmine.undefined),expect(r[1].expected).toEqual("arg"),expect(r[2].expected).toEqual(["arg1","arg2"]),expect(n).toEqual([[],["arg"],["arg1","arg2"]])})});