describe("WaitsForBlock",function(){var e,t,n,i,s,a;beforeEach(function(){e=new jasmine.Env,e.updateInterval=0,t=new jasmine.Suite(e,"suite 1"),n=1e3,i=new jasmine.Spec(e,t),s="some error message",a=jasmine.createSpy("onComplete")}),describe("jasmine.VERBOSE",function(){var t;beforeEach(function(){t=jasmine.VERBOSE,spyOn(e.reporter,"log")}),it("do not show information if jasmine.VERBOSE is set to false",function(){jasmine.VERBOSE=!1;var r=function(){return!0},o=new jasmine.WaitsForBlock(e,n,r,s,i);expect(e.reporter.log).not.toHaveBeenCalled(),o.execute(a),expect(e.reporter.log).not.toHaveBeenCalled(),jasmine.VERBOSE=t}),it("show information if jasmine.VERBOSE is set to true",function(){jasmine.VERBOSE=!0;var r=function(){return!0},o=new jasmine.WaitsForBlock(e,n,r,s,i);expect(e.reporter.log).not.toHaveBeenCalled(),o.execute(a),expect(e.reporter.log).toHaveBeenCalled(),jasmine.VERBOSE=t})}),it("onComplete should be called if the latchFunction returns true",function(){var t=function(){return!0},r=new jasmine.WaitsForBlock(e,n,t,s,i);expect(a).not.toHaveBeenCalled(),r.execute(a),expect(a).toHaveBeenCalled()}),it("latchFunction should run in same scope as spec",function(){var t,r=function(){t=this.scopedValue};i.scopedValue="foo";var o=new jasmine.WaitsForBlock(e,n,r,s,i);o.execute(a),expect(t).toEqual("foo")}),it("should fail spec and call onComplete if there is an error in the latchFunction",function(){var t=jasmine.createSpy("latchFunction").andThrow("some error");spyOn(i,"fail");var r=new jasmine.WaitsForBlock(e,n,t,s,i);r.execute(a),expect(i.fail).toHaveBeenCalledWith("some error"),expect(a).toHaveBeenCalled()}),describe("if latchFunction returns false",function(){var t,r;beforeEach(function(){t=jasmine.createSpy("latchFunction").andReturn(!1),r=new jasmine.FakeTimer,e.setTimeout=r.setTimeout,e.clearTimeout=r.clearTimeout,e.setInterval=r.setInterval,e.clearInterval=r.clearInterval}),it("latchFunction should be retried after 10 ms",function(){var o=new jasmine.WaitsForBlock(e,n,t,s,i);expect(t).not.toHaveBeenCalled(),o.execute(a),expect(t.callCount).toEqual(1),r.tick(5),expect(t.callCount).toEqual(1),r.tick(5),expect(t.callCount).toEqual(2)}),it("onComplete should be called if latchFunction returns true before timeout",function(){var o=new jasmine.WaitsForBlock(e,n,t,s,i);expect(a).not.toHaveBeenCalled(),o.execute(a),expect(a).not.toHaveBeenCalled(),t.andReturn(!0),r.tick(100),expect(a).toHaveBeenCalled()}),it("spec should fail with the passed message if the timeout is reached (and not call onComplete)",function(){spyOn(i,"fail");var o=new jasmine.WaitsForBlock(e,n,t,s,i);o.execute(a),expect(i.fail).not.toHaveBeenCalled(),r.tick(n),expect(i.fail).toHaveBeenCalled();var c=i.fail.mostRecentCall.args[0].message;expect(c).toMatch(s),expect(a).toHaveBeenCalled()})})});