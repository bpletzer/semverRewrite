jasmine.Matchers=function(e,t,n,i){this.env=e,this.actual=t,this.spec=n,this.isNot=i||!1,this.reportWasCalled_=!1},jasmine.Matchers.pp=function(){throw Error("jasmine.Matchers.pp() is no longer supported, please use jasmine.pp() instead!")},jasmine.Matchers.prototype.report=function(){throw Error("As of jasmine 0.11, custom matchers must be implemented differently -- please see jasmine docs")},jasmine.Matchers.wrapInto_=function(e,t){for(var n in e)if("report"!=n){var i=e[n];t.prototype[n]=jasmine.Matchers.matcherFn_(n,i)}},jasmine.Matchers.matcherFn_=function(e,t){return function(){var n=jasmine.util.argsToArray(arguments),i=t.apply(this,arguments);if(this.isNot&&(i=!i),this.reportWasCalled_)return i;var r;if(!i)if(this.message)r=this.message.apply(this,arguments),jasmine.isArray_(r)&&(r=r[this.isNot?1:0]);else{var o=e.replace(/[A-Z]/g,function(e){return" "+e.toLowerCase()});if(r="Expected "+jasmine.pp(this.actual)+(this.isNot?" not ":" ")+o,n.length>0)for(var s=0;n.length>s;s++)s>0&&(r+=","),r+=" "+jasmine.pp(n[s]);r+="."}var a=new jasmine.ExpectationResult({matcherName:e,passed:i,expected:n.length>1?n:n[0],actual:this.actual,message:r});return this.spec.addMatcherResult(a),jasmine.undefined}},jasmine.Matchers.prototype.toBe=function(e){return this.actual===e},jasmine.Matchers.prototype.toNotBe=function(e){return this.actual!==e},jasmine.Matchers.prototype.toEqual=function(e){return this.env.equals_(this.actual,e)},jasmine.Matchers.prototype.toNotEqual=function(e){return!this.env.equals_(this.actual,e)},jasmine.Matchers.prototype.toMatch=function(e){return RegExp(e).test(this.actual)},jasmine.Matchers.prototype.toNotMatch=function(e){return!RegExp(e).test(this.actual)},jasmine.Matchers.prototype.toBeDefined=function(){return this.actual!==jasmine.undefined},jasmine.Matchers.prototype.toBeUndefined=function(){return this.actual===jasmine.undefined},jasmine.Matchers.prototype.toBeNull=function(){return null===this.actual},jasmine.Matchers.prototype.toBeNaN=function(){return this.message=function(){return["Expected "+jasmine.pp(this.actual)+" to be NaN."]},this.actual!==this.actual},jasmine.Matchers.prototype.toBeTruthy=function(){return!!this.actual},jasmine.Matchers.prototype.toBeFalsy=function(){return!this.actual},jasmine.Matchers.prototype.toHaveBeenCalled=function(){if(arguments.length>0)throw Error("toHaveBeenCalled does not take arguments, use toHaveBeenCalledWith");if(!jasmine.isSpy(this.actual))throw Error("Expected a spy, but got "+jasmine.pp(this.actual)+".");return this.message=function(){return["Expected spy "+this.actual.identity+" to have been called.","Expected spy "+this.actual.identity+" not to have been called."]},this.actual.wasCalled},jasmine.Matchers.prototype.wasCalled=jasmine.Matchers.prototype.toHaveBeenCalled,jasmine.Matchers.prototype.wasNotCalled=function(){if(arguments.length>0)throw Error("wasNotCalled does not take arguments");if(!jasmine.isSpy(this.actual))throw Error("Expected a spy, but got "+jasmine.pp(this.actual)+".");return this.message=function(){return["Expected spy "+this.actual.identity+" to not have been called.","Expected spy "+this.actual.identity+" to have been called."]},!this.actual.wasCalled},jasmine.Matchers.prototype.toHaveBeenCalledWith=function(){var e=jasmine.util.argsToArray(arguments);if(!jasmine.isSpy(this.actual))throw Error("Expected a spy, but got "+jasmine.pp(this.actual)+".");return this.message=function(){var t="Expected spy "+this.actual.identity+" not to have been called with "+jasmine.pp(e)+" but it was.",n="";return n=0===this.actual.callCount?"Expected spy "+this.actual.identity+" to have been called with "+jasmine.pp(e)+" but it was never called.":"Expected spy "+this.actual.identity+" to have been called with "+jasmine.pp(e)+" but actual calls were "+jasmine.pp(this.actual.argsForCall).replace(/^\[ | \]$/g,""),[n,t]},this.env.contains_(this.actual.argsForCall,e)},jasmine.Matchers.prototype.wasCalledWith=jasmine.Matchers.prototype.toHaveBeenCalledWith,jasmine.Matchers.prototype.wasNotCalledWith=function(){var e=jasmine.util.argsToArray(arguments);if(!jasmine.isSpy(this.actual))throw Error("Expected a spy, but got "+jasmine.pp(this.actual)+".");return this.message=function(){return["Expected spy not to have been called with "+jasmine.pp(e)+" but it was","Expected spy to have been called with "+jasmine.pp(e)+" but it was"]},!this.env.contains_(this.actual.argsForCall,e)},jasmine.Matchers.prototype.toContain=function(e){return this.env.contains_(this.actual,e)},jasmine.Matchers.prototype.toNotContain=function(e){return!this.env.contains_(this.actual,e)},jasmine.Matchers.prototype.toBeLessThan=function(e){return e>this.actual},jasmine.Matchers.prototype.toBeGreaterThan=function(e){return this.actual>e},jasmine.Matchers.prototype.toBeCloseTo=function(e,t){return 0!==t&&(t=t||2),Math.abs(e-this.actual)<Math.pow(10,-t)/2},jasmine.Matchers.prototype.toThrow=function(e){var t,n=!1;if("function"!=typeof this.actual)throw Error("Actual is not a function");try{this.actual()}catch(i){t=i}t&&(n=e===jasmine.undefined||this.env.equals_(t.message||t,e.message||e));var r=this.isNot?"not ":"";return this.message=function(){return!t||e!==jasmine.undefined&&this.env.equals_(t.message||t,e.message||e)?"Expected function to throw an exception.":["Expected function "+r+"to throw",e?e.message||e:"an exception",", but it threw",t.message||t].join(" ")},n},jasmine.Matchers.Any=function(e){this.expectedClass=e},jasmine.Matchers.Any.prototype.jasmineMatches=function(e){return this.expectedClass==String?"string"==typeof e||e instanceof String:this.expectedClass==Number?"number"==typeof e||e instanceof Number:this.expectedClass==Function?"function"==typeof e||e instanceof Function:this.expectedClass==Object?"object"==typeof e:e instanceof this.expectedClass},jasmine.Matchers.Any.prototype.jasmineToString=function(){return"<jasmine.any("+this.expectedClass+")>"},jasmine.Matchers.ObjectContaining=function(e){this.sample=e},jasmine.Matchers.ObjectContaining.prototype.jasmineMatches=function(e,t,n){t=t||[],n=n||[];var i=jasmine.getEnv(),r=function(e,t){return null!=e&&e[t]!==jasmine.undefined};for(var o in this.sample)!r(e,o)&&r(this.sample,o)?t.push("expected has key '"+o+"', but missing from actual."):i.equals_(this.sample[o],e[o],t,n)||n.push("'"+o+"' was '"+(e[o]?jasmine.util.htmlEscape(""+e[o]):e[o])+"' in expected, but was '"+(this.sample[o]?jasmine.util.htmlEscape(""+this.sample[o]):this.sample[o])+"' in actual.");return 0===t.length&&0===n.length},jasmine.Matchers.ObjectContaining.prototype.jasmineToString=function(){return"<jasmine.objectContaining("+jasmine.pp(this.sample)+")>"};